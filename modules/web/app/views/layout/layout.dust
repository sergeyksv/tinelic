<!DOCTYPE html>
<html lang="en">
<head>
{#_t_env_production}
<script src="{_t_prefix}/js/build/jquery.js"></script>
<script src="{_t_prefix}/js/build/tinelic.js?rev={_t_rev}"></script>
{:else}
<script src="{_t_prefix}/app/rum.js"></script>
<script src="{_t_prefix}/js/jquery.js"></script>
<script src="{_t_prefix}/js/raven.js"></script>
{/_t_env_production}
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- <link rel="icon" href="/web/img/favicon.ico" type="image/x-icon" > -->
<link rel="apple-touch-icon" sizes="180x180" href="/web/img/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/web/img/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/web/img/favicon-16x16.png">
<link rel="manifest" href="/web/img/site.webmanifest">
<link rel="mask-icon" href="/web/img/safari-pinned-tab.svg" color="#5bbad5">
<meta name="msapplication-TileColor" content="#da532c">
<meta name="theme-color" content="#ffffff">
<link href="{_t_prefix}/css/style.css?rev={_t_rev}" rel="stylesheet">
<script>
(function () {
	var _t_page = new Date();
	Tinelic.config({
		url:location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : ''),
		project:"{_t_self_id}",
		route:"{_t_route}",
		_dtp:_t_page,
		ajaxCallback: function(s, XHR){
			var re=/(^\/restapi\/[A-Za-z]+[0-9]+\w+\/)|(^\/restapi\/[0-9]+[A-Za-z]+\w+\/)/;
			s.r=s.r.replace(/\/wire\/w[0-9]+/,"/wire")
				.replace(/^\/restapi\/([^\/]+)\//,"/restapi/token/")
				.replace(re,"/restapi/");
		}
	});
	Raven.config(location.protocol + '//nah@' + location.hostname + (location.port ? ':' + location.port : '')+'/collect/sentry/{_t_self_id}', {
		dataCallback: function(data) {
			data._dtp = _t_page;
			data._dt = new Date();
			return data;
		}
	}).install();
})();
</script>
</head>
<body id="{_t_view.cid}">
{@view name=_t_main_view /}

{#_t_env_production}
<script src="{_t_prefix}/js/build/require.js?rev={_t_rev}"></script>
{:else}
<script src="{_t_prefix}/app/require.js"></script>
{/_t_env_production}

<script>
	var reqctx = requirejs.config({
		baseUrl: "{_t_prefix}/app",
		packages: [
			, {
				name: 'moment',
				location: '../js/moment',
				main: 'moment'
			}

		],
		paths:{
			"tson":"../tinyback/tson",
			"prefixify":"../tinyback/prefixify",
			"tinybone":"../tinybone",
			"lodash":"../js/lodash",
			"dust.core": "../js/dust",
			"dust.parse": "../js/parser",
			"dust.compile": "../js/compiler",
			"md5":"../js/md5",
			"dust-helpers":"../js/dust-helpers",
			"safe":"../js/safe",
			"dustc":"../tinybone/dustc",
			"text":"../js/text",
			"highcharts":"../js/highcharts",
			"jquery-cookie": "../js/jquery-cookie",
			"jquery.blockUI": "../js/jquery.blockUI",
			"bootstrap":"../js/bootstrap",
			"jquery.tablesorter.combined":"../js/jquery.tablesorter.combined"
		},
		config:{
			"tinybone/backadapter":{
				_t_son:'out'
			}{?_t_env_production}{:else},
			"tinybone/base":{
				debug:true
			},
			"dustc":{
				debug:true
			}{/_t_env_production}
		}
	});
	requirejs.onError = function (err) {
		Raven.captureException(err);
	};
    define.amd.dust = true;
	define("backctx","/restapi/");
	define("jquery", [], function() {
		return window.jQuery;
	});

	$.getJSON("/web/app/wire/{_t_unique}", function (wire) {
		reqctx([{#_t_env_production}"{_t_prefix}/js/build/app.js?rev={_t_rev}","{_t_prefix}/js/build/routes/main.js?rev={_t_rev}"{/_t_env_production}], function () {
			reqctx(["app"], function (App) {
				(new App()).init(wire);
			})
		});
	})
{#_t_env_production}
{:else}
// error simulation
var _t_page = new Date();
setTimeout(function () {
       if (_t_page.valueOf()%2) {
               throw new Error("Test Error2"+(new Date()).getDay());
       };
},1000);
if (_t_page.valueOf()%2) {
       throw new Error("Test Error1"+(new Date()).getDay());
};
{/_t_env_production}
</script>
</body>
</html>
